generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id             String     @id @default(cuid())
  email          String?    @unique
  phone          String?    @unique
  privyUserId    String?    @unique
  kycStatus      KycStatus  @default(PENDING)
  kycApplicantId String?    @unique
  flags          Json       @default("{}")
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  auditLogs      AuditLog[]
  wallets        Wallet[]

  @@index([kycStatus])
}

model Wallet {
  id        String         @id @default(cuid())
  accountId String
  address   String         @unique
  provider  WalletProvider
  kind      WalletKind
  createdAt DateTime       @default(now())
  account   Account        @relation(fields: [accountId], references: [id], onDelete: Cascade)

  @@index([accountId])
}

model KycEvent {
  id          String   @id @default(cuid())
  accountId   String
  applicantId String
  provider    String
  type        String
  payload     Json
  createdAt   DateTime @default(now())

  @@index([accountId])
}

model Session {
  id           String   @id @default(cuid())
  accountId    String
  refreshToken String   @unique
  userAgent    String?
  ip           String?
  expiresAt    DateTime
  createdAt    DateTime @default(now())

  @@index([accountId])
}

model AuditLog {
  id        String   @id @default(cuid())
  accountId String?
  actor     String
  action    String
  metadata  Json
  createdAt DateTime @default(now())
  Account   Account? @relation(fields: [accountId], references: [id])
}

model Order {
  id         String   @id @default(cuid())
  uid        String
  market     String
  side       String
  price      Decimal
  qty        Decimal
  qtyFilled  Decimal  @default(0)
  tif        String
  status     String
  reserveRef String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Trade {
  id          String   @id @default(cuid())
  matchId     String
  buyOrderId  String
  sellOrderId String
  price       Decimal
  qty         Decimal
  notional    Decimal
  settlement  String
  createdAt   DateTime @default(now())
}

model Balance {
  id        String   @id @default(cuid())
  uid       String
  asset     String
  available Decimal  @default(0)
  reserved  Decimal  @default(0)
  updatedAt DateTime @updatedAt
}

enum KycStatus {
  PENDING
  APPROVED
  REJECTED
  REVIEW
}

enum WalletProvider {
  PRIVY
  SIWE
  SAFE
  OTHER
}

enum WalletKind {
  EMBEDDED
  EXTERN
  SAFE
  AA
}
